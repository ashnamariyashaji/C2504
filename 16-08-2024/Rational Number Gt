//Rational Number Gt

    class MyUtil
    {
        public static int FindGCD(int a, int b) 
        {
            while (a != b)
            {
                if (a > b)
                    a -= b;
                else
                    b -= a;
            }
            return a;
        }
    }
    class RationalNumber
    {
        public int Numerator { get; set; }
        private int denominator;
        public int Denominator
        {
            get
            {
                return denominator;
            }
            set
            {
                if (denominator == 0)
                {
                    denominator = 1;
                }
                denominator = value;
            }
        }

        public RationalNumber(int _numerator, int _denominator)
        {
            
            if (_denominator == 0)
            {
                _denominator = 1;
            }
            this.Numerator = _numerator;
            this.Denominator = _denominator;
        }
        public bool IsGreater(RationalNumber other)
        {
            return this.Numerator * other.Denominator > other.Numerator * this.Denominator;
        }

        public override string ToString()
        {
            return $"[{Numerator} / {Denominator}]";
        }

    }
    internal class Program
    {
        static void Main(string[] args)
        {
            RationalNumber firstNo = new RationalNumber(3, 4);
            RationalNumber secondNo = new RationalNumber(2, 4);

            if (firstNo.IsGreater(secondNo))
            {
                Console.WriteLine($"Rational number 1 {firstNo} is greater than Rational number 2 {secondNo}");
            }
            else
            {
                Console.WriteLine($"Rational number 1 {firstNo} is not greater than Rational number 2 {secondNo}");
            }

        }
    }
}
