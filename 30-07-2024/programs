1.To find the average of two number

Enter the first number 1
Enter the second number 2
sum= number1 + number2
average = sum / 2
print average

Pseudo:routine
  function FindSum(number1,number2)
    sum=number1 + number2
    average = sum / 2
    return average

Pseudo:routine test
 procedure TestFindSum()
 input number1
 input number2
 average = (number1 + number2) / 2
 Print average
 ************************************************************

2.To find cube of numbers

Pseudo:
input num
cube = numb * num * num
Print cube

Pseudo:routine
  function FindCube(num)
    cube=num * num * num
    return cube

Pseudo:routine test
   procedure TestFindCube()
   input number
   cube =  FindCube(numb)
   print cube
***********************************************************
3.To find square of the number

Pseudo:
   input num
   square = num * num
   print square

Pseudo:routine
   function FindSquare(num)
    square = num* num
    return square

Pseudo:routine test
   procedure TestFindSquare()
   intput num
   square = FindSqaure(num)
   print square   
*************************************************************
4.swap two numbers

Pseudo:
input num1
input num2  
temp=num1
num1=num2
num2=temp
print num1,num2 

Pseudo:routine

Function SwapNumbers(num1, num2)
    temp = num1
    num1 = num2
    num2 = temp
    return num1, num2

Pseudo:routine test:

Procedure TestSwapNumbers()
    input num1
    input num2
    (num1, num2) = SwapNumbers(num1, num2)
    Print  num1, num2
***********************************************************************
5.to check nubmer is divisible by

Pseudo:
input num
if num % 3 == 0 Then
    Print "num is divisible by 3"
else
    Print "num is not divisible by 3"

Pseudo:routine
   Function IsDivisibleBy3(num)
    if num % 3 == 0 Then
        return True
    else
        return False

Pseudo:routine test:
 procedure TestIsDivisibleBy3()
    input num
    result = IsDivisibleBy3(num)
    if result Then
        Print "num is divisible by 3"
    else
        Print "num is not divisible by 3"
*****************************************************************************
6.To check number divisible by 27

Pseudo:
input num
if num % 27 == 0 Then
    Print "num is divisible by 27"
else
    Print "num is not divisible by 27"

Pseudo:routine
   Function IsDivisibleBy3(num)
    if num % 27 == 0 Then
        return True
    else
        return False

Pseudo:routine test:
 procedure TestIsDivisibleBy27()
    input num
    result = IsDivisibleBy27(num)
    if result Then
        Print "num is divisible by 27"
    else
        Print "num is not divisible by 27"
***************************************************************************
7.To print N natural numbers
  
Pseudo:
  input num
   for i = 1 to num
    print i

Pseudo:routine
  function PrintNaturalNumbers(num)
    for i = 1 to number
        Print i
    
Pseudo:routine test
   procedure TestPrintNaturalNumbers()
    input num
    PrintNaturalNumbers(number)
******************************************************************************
8.To check a number palindrome
 
Pseudo:  
input num
original_num = num
reversed_num = 0

while num > 0
    digit = num % 10
    reversed_num = reversed_num * 10 + digit
    num = num / 10

if original_num == reversed_num 
    Print "The number is a palindrome"
else
    Print "The number is not a palindrome"

Pseudo:routine
 function IsPalindrome(num)
    original_num = num
    reversed_num = 0

    while num > 0
        digit = num % 10
        reversed_num = reversed_num * 10 + digit
        num = num / 10

    if original_num == reversed_num
        return true
    else
        return false

Pseudo:routine test

Procedure TestIsPalindrome()
    input num
    result = IsPalindrome(num)
    if result 
        Print "The number is a palindrome"
    else
        Print "The number is not a palindrome"


***********************************************************************
9.To check a number armstrong

Pseudo:
Input num
original_num = num
num_digits = 0
sum_of_powers = 0
temp = num
while temp > 0
    num_digits = num_digits + 1
    temp = temp / 10
temp = num
while temp > 0
    digit = temp % 10
    sum_of_powers = sum_of_powers + (digit ^ num_digits)
    temp = temp / 10
if original_num == sum_of_powers 
    Print "The number is an Armstrong number"
else
    Print "The number is not an Armstrong number"


Pseudo:routine
function IsArmstrong(num)
    original_num = num
    num_digits = 0
    sum_of_powers = 0
    temp = num
    While temp > 0
        temp = temp / 10
        num_digits = num_digits + 1
    temp = num
    while temp > 0
        digit = temp % 10
        sum_of_powers = sum_of_powers + (digit ^ num_digits)
        temp = temp / 10
    end while

    if original_num == sum_of_powers 
        return true
    else
        return false

Pseudo:routine test
procedure TestIsArmstrong()
    input num
    result = IsArmstrong(num)
    if result Then
        Print "The number is an Armstrong number"
    else
        Print "The number is not an Armstrong number"
**********************************************************************


  

    
